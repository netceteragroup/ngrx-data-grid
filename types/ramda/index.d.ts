export as namespace R;
export * from './es/$curriedFunctions';
export * from './es/$operation';
export * from './es/$placeholder';
export * from './es/$types';

import __ from './es/__';
import add from './es/add';
import addIndex from './es/addIndex';
import adjust from './es/adjust';
import all from './es/all';
import allPass from './es/allPass';
import always from './es/always';
import and from './es/and';
import any from './es/any';
import anyPass from './es/anyPass';
import ap from './es/ap';
import aperture from './es/aperture';
import append from './es/append';
import apply from './es/apply';
import applySpec from './es/applySpec';
import applyTo from './es/applyTo';
import ascend from './es/ascend';
import assoc from './es/assoc';
import assocPath from './es/assocPath';
import binary from './es/binary';
import bind from './es/bind';
import both from './es/both';
import call from './es/call';
import chain from './es/chain';
import clamp from './es/clamp';
import clone from './es/clone';
import comparator from './es/comparator';
import complement from './es/complement';
import compose from './es/compose';
import composeK from './es/composeK';
import composeP from './es/composeP';
import concat from './es/concat';
import cond from './es/cond';
import construct from './es/construct';
import constructN from './es/constructN';
import contains from './es/contains';
import converge from './es/converge';
import countBy from './es/countBy';
import curry from './es/curry';
import curryN from './es/curryN';
import dec from './es/dec';
import defaultTo from './es/defaultTo';
import descend from './es/descend';
import difference from './es/difference';
import differenceWith from './es/differenceWith';
import dissoc from './es/dissoc';
import dissocPath from './es/dissocPath';
import divide from './es/divide';
import drop from './es/drop';
import dropLast from './es/dropLast';
import dropLastWhile from './es/dropLastWhile';
import dropRepeats from './es/dropRepeats';
import dropRepeatsWith from './es/dropRepeatsWith';
import dropWhile from './es/dropWhile';
import either from './es/either';
import empty from './es/empty';
import endsWith from './es/endsWith';
import eqBy from './es/eqBy';
import eqProps from './es/eqProps';
import equals from './es/equals';
import evolve from './es/evolve';
import F from './es/F';
import filter from './es/filter';
import find from './es/find';
import findIndex from './es/findIndex';
import findLast from './es/findLast';
import findLastIndex from './es/findLastIndex';
import flatten from './es/flatten';
import flip from './es/flip';
import forEach from './es/forEach';
import forEachObjIndexed from './es/forEachObjIndexed';
import fromPairs from './es/fromPairs';
import groupBy from './es/groupBy';
import groupWith from './es/groupWith';
import gt from './es/gt';
import gte from './es/gte';
import has from './es/has';
import hasIn from './es/hasIn';
import head from './es/head';
import identical from './es/identical';
import identity from './es/identity';
import ifElse from './es/ifElse';
import inc from './es/inc';
import indexBy from './es/indexBy';
import indexOf from './es/indexOf';
import init from './es/init';
import innerJoin from './es/innerJoin';
import insert from './es/insert';
import insertAll from './es/insertAll';
import intersection from './es/intersection';
import intersperse from './es/intersperse';
import into from './es/into';
import invert from './es/invert';
import invertObj from './es/invertObj';
import invoker from './es/invoker';
import is from './es/is';
import isEmpty from './es/isEmpty';
import isNil from './es/isNil';
import join from './es/join';
import juxt from './es/juxt';
import keys from './es/keys';
import keysIn from './es/keysIn';
import last from './es/last';
import lastIndexOf from './es/lastIndexOf';
import length from './es/length';
import lens from './es/lens';
import lensIndex from './es/lensIndex';
import lensPath from './es/lensPath';
import lensProp from './es/lensProp';
import lift from './es/lift';
import liftN from './es/liftN';
import lt from './es/lt';
import lte from './es/lte';
import map from './es/map';
import mapAccum from './es/mapAccum';
import mapAccumRight from './es/mapAccumRight';
import mapObjIndexed from './es/mapObjIndexed';
import match from './es/match';
import mathMod from './es/mathMod';
import max from './es/max';
import maxBy from './es/maxBy';
import mean from './es/mean';
import median from './es/median';
import memoize from './es/memoize';
import memoizeWith from './es/memoizeWith';
import merge from './es/merge';
import mergeAll from './es/mergeAll';
import mergeDeepLeft from './es/mergeDeepLeft';
import mergeDeepRight from './es/mergeDeepRight';
import mergeDeepWith from './es/mergeDeepWith';
import mergeDeepWithKey from './es/mergeDeepWithKey';
import mergeWith from './es/mergeWith';
import mergeWithKey from './es/mergeWithKey';
import min from './es/min';
import minBy from './es/minBy';
import modulo from './es/modulo';
import multiply from './es/multiply';
import nAry from './es/nAry';
import negate from './es/negate';
import none from './es/none';
import not from './es/not';
import nth from './es/nth';
import nthArg from './es/nthArg';
import o from './es/o';
import objOf from './es/objOf';
import of from './es/of';
import omit from './es/omit';
import once from './es/once';
import or from './es/or';
import over from './es/over';
import pair from './es/pair';
import partial from './es/partial';
import partialRight from './es/partialRight';
import partition from './es/partition';
import path from './es/path';
import pathEq from './es/pathEq';
import pathOr from './es/pathOr';
import pathSatisfies from './es/pathSatisfies';
import pick from './es/pick';
import pickAll from './es/pickAll';
import pickBy from './es/pickBy';
import pipe from './es/pipe';
import pipeK from './es/pipeK';
import pipeP from './es/pipeP';
import pluck from './es/pluck';
import prepend from './es/prepend';
import product from './es/product';
import project from './es/project';
import prop from './es/prop';
import propEq from './es/propEq';
import propIs from './es/propIs';
import propOr from './es/propOr';
import props from './es/props';
import propSatisfies from './es/propSatisfies';
import range from './es/range';
import reduce from './es/reduce';
import reduceBy from './es/reduceBy';
import reduced from './es/reduced';
import reduceRight from './es/reduceRight';
import reduceWhile from './es/reduceWhile';
import reject from './es/reject';
import remove from './es/remove';
import repeat from './es/repeat';
import replace from './es/replace';
import reverse from './es/reverse';
import scan from './es/scan';
import sequence from './es/sequence';
import set from './es/set';
import slice from './es/slice';
import sort from './es/sort';
import sortBy from './es/sortBy';
import sortWith from './es/sortWith';
import split from './es/split';
import splitAt from './es/splitAt';
import splitEvery from './es/splitEvery';
import splitWhen from './es/splitWhen';
import startsWith from './es/startsWith';
import subtract from './es/subtract';
import sum from './es/sum';
import symmetricDifference from './es/symmetricDifference';
import symmetricDifferenceWith from './es/symmetricDifferenceWith';
import T from './es/T';
import tail from './es/tail';
import take from './es/take';
import takeLast from './es/takeLast';
import takeLastWhile from './es/takeLastWhile';
import takeWhile from './es/takeWhile';
import tap from './es/tap';
import test from './es/test';
import times from './es/times';
import toLower from './es/toLower';
import toPairs from './es/toPairs';
import toPairsIn from './es/toPairsIn';
import toString from './es/toString';
import toUpper from './es/toUpper';
import transduce from './es/transduce';
import transpose from './es/transpose';
import traverse from './es/traverse';
import trim from './es/trim';
import tryCatch from './es/tryCatch';
import type from './es/type';
import unapply from './es/unapply';
import unary from './es/unary';
import uncurryN from './es/uncurryN';
import unfold from './es/unfold';
import union from './es/union';
import unionWith from './es/unionWith';
import uniq from './es/uniq';
import uniqBy from './es/uniqBy';
import uniqWith from './es/uniqWith';
import unless from './es/unless';
import unnest from './es/unnest';
import until from './es/until';
import update from './es/update';
import useWith from './es/useWith';
import values from './es/values';
import valuesIn from './es/valuesIn';
import view from './es/view';
import when from './es/when';
import where from './es/where';
import whereEq from './es/whereEq';
import without from './es/without';
import xprod from './es/xprod';
import zip from './es/zip';
import zipObj from './es/zipObj';
import zipWith from './es/zipWith';

export { __, add, addIndex, adjust, all, allPass, always, and, any, anyPass, ap, aperture, append, apply, applySpec, applyTo, ascend, assoc, assocPath, binary, bind, both, call, chain, clamp, clone, comparator, complement, compose, composeK, composeP, concat, cond, construct, constructN, contains, converge, countBy, curry, curryN, dec, defaultTo, descend, difference, differenceWith, dissoc, dissocPath, divide, drop, dropLast, dropLastWhile, dropRepeats, dropRepeatsWith, dropWhile, either, empty, endsWith, eqBy, eqProps, equals, evolve, F, filter, find, findIndex, findLast, findLastIndex, flatten, flip, forEach, forEachObjIndexed, fromPairs, groupBy, groupWith, gt, gte, has, hasIn, head, identical, identity, ifElse, inc, indexBy, indexOf, init, innerJoin, insert, insertAll, intersection, intersperse, into, invert, invertObj, invoker, is, isEmpty, isNil, join, juxt, keys, keysIn, last, lastIndexOf, length, lens, lensIndex, lensPath, lensProp, lift, liftN, lt, lte, map, mapAccum, mapAccumRight, mapObjIndexed, match, mathMod, max, maxBy, mean, median, memoize, memoizeWith, merge, mergeAll, mergeDeepLeft, mergeDeepRight, mergeDeepWith, mergeDeepWithKey, mergeWith, mergeWithKey, min, minBy, modulo, multiply, nAry, negate, none, not, nth, nthArg, o, objOf, of, omit, once, or, over, pair, partial, partialRight, partition, path, pathEq, pathOr, pathSatisfies, pick, pickAll, pickBy, pipe, pipeK, pipeP, pluck, prepend, product, project, prop, propEq, propIs, propOr, props, propSatisfies, range, reduce, reduceBy, reduced, reduceRight, reduceWhile, reject, remove, repeat, replace, reverse, scan, sequence, set, slice, sort, sortBy, sortWith, split, splitAt, splitEvery, splitWhen, startsWith, subtract, sum, symmetricDifference, symmetricDifferenceWith, T, tail, take, takeLast, takeLastWhile, takeWhile, tap, test, times, toLower, toPairs, toPairsIn, toString, toUpper, transduce, transpose, traverse, trim, tryCatch, type, unapply, unary, uncurryN, unfold, union, unionWith, uniq, uniqBy, uniqWith, unless, unnest, until, update, useWith, values, valuesIn, view, when, where, whereEq, without, xprod, zip, zipObj, zipWith };
